# Класс может  содержать либо:
# Свойства(данные)
# Методы(действия) функция
# class Point:
#     color = 'red'
#     circle = 2
#     # теперь объявим метод в нашем классе
#     # предположим что мы хотим, что бы этот метод set_coords в именно этот экземпляр класса pt добавлял координаты x и y
#     # как раз это и можно сделать через параметр self
#     def set_coords(self, x, y):
#         self.x = x # создадим новый атрибут x
#         self.y = y
#     # Пропишем ещё один метод get_coords который будет возвращать текущие координаты нашей точки
#     def get_coords(self):
#         return (self.x, self.y)
#
# pt = Point()
# pt.set_coords(1, 2)
# print(pt.get_coords()) # (1, 2)
# f = getattr(pt, 'get_coords')
# print(f()) # (1, 2)

# Point.set_coords()
# self - это вызов метода экземпляра.
# Создадим экземпляр класса Point
# pt = Point()
# # self в данный момент ведет на объект pt через который был вызван данный метод
# pt.set_coords(1, 2)
# # Теперь если мы захотим вызвать этот же метот через класс Point то произойдет ошибка, а все по тому что мы не указали
# # в круглых скобках параметр self
# Point.set_coords()
# # А вот так будет работать
# Point.set_coords(pt) # вызов метода set_coords<__main__.Point object at 0x0000020CDABE9160>




